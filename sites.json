const GITHUB_TOKEN = "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"; // Your GitHub token
const GITHUB_OWNER = "alexs771"; // Your GitHub username
const GITHUB_REPO = "add-your-site"; // Your GitHub repo name
const GITHUB_FILE_PATH = "sites.json"; // The file where the site URLs are stored

// Cloudflare Worker script
addEventListener("fetch", event => {
    event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
    if (request.method === "POST") {
        const requestBody = await request.json();
        const { url } = requestBody;

        if (!url) {
            return new Response("URL is required", { status: 400 });
        }

        // Fetch the current content of the sites.json file from GitHub
        const sitesResponse = await fetch(
            `https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/contents/${GITHUB_FILE_PATH}`,
            {
                headers: {
                    Authorization: `token ${GITHUB_TOKEN}`,
                    "Accept": "application/vnd.github.v3.raw",
                },
            }
        );
        
        if (!sitesResponse.ok) {
            return new Response("Failed to fetch sites.json", { status: 500 });
        }

        const currentSites = await sitesResponse.json();
        const newSites = [...currentSites, url];

        // Convert the updated content to base64
        const updatedContent = Buffer.from(JSON.stringify(newSites, null, 2)).toString("base64");

        // Update the sites.json file on GitHub
        const shaResponse = await fetch(
            `https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/contents/${GITHUB_FILE_PATH}`,
            {
                headers: {
                    Authorization: `token ${GITHUB_TOKEN}`,
                },
            }
        );
        const shaData = await shaResponse.json();
        const sha = shaData.sha;

        const updateResponse = await fetch(
            `https://api.github.com/repos/${GITHUB_OWNER}/${GITHUB_REPO}/contents/${GITHUB_FILE_PATH}`,
            {
                method: "PUT",
                headers: {
                    Authorization: `token ${GITHUB_TOKEN}`,
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    message: "Add new site URL",
                    content: updatedContent,
                    sha: sha,
                }),
            }
        );

        if (!updateResponse.ok) {
            return new Response("Failed to update GitHub repository", { status: 500 });
        }

        return new Response("Site added successfully", { status: 200 });
    } else {
        return new Response("Invalid request method", { status: 405 });
    }
}
